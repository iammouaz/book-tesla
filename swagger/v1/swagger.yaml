---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/users/sign_in":
    post:
      summary: Create a new session
      tags:
      - How to login
      parameters:
      - name: email
        in: query
        description: Users can log in with their emails.\n Send an email as a parameter.\n
          If a user match with that email, the response will retrieve a **success
          message** and the **user id**. If the email doesn't match any user in the
          database, the response will retrieve an **error message**
        required: false
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/v1/bookings":
    get:
      summary: list bookings
      responses:
        '200':
          description: successful
    post:
      summary: create booking
      responses:
        '200':
          description: successful
  "/v1/bookings/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show booking
      responses:
        '200':
          description: successful
    patch:
      summary: update booking
      responses:
        '200':
          description: successful
    put:
      summary: update booking
      responses:
        '200':
          description: successful
    delete:
      summary: delete booking
      responses:
        '200':
          description: successful
  "/v1/cars":
    get:
      summary: list cars
      responses:
        '200':
          description: successful
    post:
      summary: create car
      responses:
        '200':
          description: successful
  "/v1/cars/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show car
      responses:
        '200':
          description: successful
    patch:
      summary: update car
      responses:
        '200':
          description: successful
    put:
      summary: update car
      responses:
        '200':
          description: successful
    delete:
      summary: delete car
      responses:
        '200':
          description: successful
  "/v1/users":
    get:
      summary: list users
      tags:
      - Users
      parameters:
      - name: email
        in: query
        description: Send an email as a parameter.\n If a user match with that email,
          the response will retrieve a **success message** and the **user id**. If
          the email doesn't match any user in the database, the response will retrieve
          an **error message**
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
    post:
      summary: Create an user
      tags:
      - Users
      parameters:
      - name: email
        in: query
        description: Add an email
        required: true
        schema:
          type: string
      - name: username
        in: query
        description: Add a username
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Add a password
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: Add a valid id.
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      responses:
        '200':
          description: successful
    patch:
      summary: Update user
      tags:
      - Users
      parameters:
      - name: email
        in: path
        description: Add a new email.
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
    put:
      summary: Update user
      tags:
      - Users
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      tags:
      - Users
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: www.localhost:8000
